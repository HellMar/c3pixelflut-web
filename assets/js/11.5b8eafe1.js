(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{369:function(e,t,r){"use strict";r.r(t);var n=r(53),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"wie"}},[e._v("Wie?")]),e._v(" "),r("h3",{attrs:{id:"server-ips"}},[e._v("Server IPs")]),e._v(" "),r("p",[r("s",[e._v("Der Server an der Wand mit der IP "),r("strong",[e._v("151.217.111.34")]),e._v(" oder "),r("strong",[e._v("2001:67c:20a1:1111:2051:5dff:feda:2983")]),e._v(" lauscht auf dem TCP-Port "),r("strong",[e._v("1234")])]),r("br"),e._v(" "),r("s",[e._v("Der Server an der Wand oder der Chaos West Stage mit der IP "),r("strong",[e._v("151.217.176.193")]),e._v(" oder "),r("strong",[e._v("2001:67c:20a1:1176:202:c9ff:fe5a:28f9")]),e._v(" lauscht auf dem TCP-Port "),r("strong",[e._v("1234")])])]),e._v(" "),r("p",[e._v("Infos zu den IPs folgen sobald sie feststehen.")]),e._v(" "),r("p",[r("font",{staticStyle:{color:"red"},attrs:{size:"5"}},[e._v("⚠️ Verbindungen aus dem WLAN werden blockiert️⚠️")])],1),e._v(" "),r("h3",{attrs:{id:"befehle"}},[e._v("Befehle")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("PX <x> <y> <rrggbb|aarrggbb> # Setze den Pixel an der Stelle x und y mit angegebener Hexadezimal Farbe\nPX <x> <y>                   # Antwort des Servers entspricht dem Hexadezimal Farbe des Pixels\nSIZE                         # Antwort des Servers entspricht der Spielfeldgröße auf dem Server\nOFFSET <x> <y>               # Setze den offset für die zuküntigen Pixel der Connection\n")])])]),r("h3",{attrs:{id:"beispiel-python3"}},[e._v("Beispiel Python3")]),e._v(" "),r("h4",{attrs:{id:"script-in-python3"}},[e._v("Script in Python3")]),e._v(" "),r("div",{staticClass:"language-python3 extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("import sys\nimport socket\nfrom PIL import Image\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.connect((sys.argv[1], int(sys.argv[2])))\n\ndef pixel(x,y,r,g,b,a=255):\n  if a == 255:\n    sock.send('PX %d %d %02x%02x%02x\\n' % (x,y,r,g,b))\n  else:\n    sock.send('PX %d %d %02x%02x%02x%02x\\n' % (x,y,r,g,b,a))\n\nim = Image.open(sys.argv[3]).convert('RGBA')\n_,_,w,h = im.getbbox()\nfor x in xrange(w):\n  for y in xrange(h):\n    r,g,b,a = im.getpixel((x,y))\n    pixel(x,y,r,g,b,a)\n")])])]),r("h4",{attrs:{id:"aufruf"}},[e._v("Aufruf")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("python3 client.py ip.ip.ip.ip "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("1234")]),e._v(" picture.png\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);